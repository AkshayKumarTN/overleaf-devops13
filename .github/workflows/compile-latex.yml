name: Compile LaTeX Document

on:
  push:
    branches: [ main ]
    paths:
      - '**.tex'
      - '**.bib'
      - '.github/workflows/compile-latex.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_latex:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate version information
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_COUNT=$(git rev-list --count HEAD)
          COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          COMMIT_MSG=$(git log -1 --pretty=%B | head -n 1)
          
          echo "\\newcommand{\\gitversion}{Version: CL$COMMIT_COUNT-$COMMIT_HASH ($COMMIT_DATE)}" > version.tex
          
          echo "Generated version.tex:"
          cat version.tex
          
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
          echo "COMMIT_COUNT=$COMMIT_COUNT" >> $GITHUB_ENV
      
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          args: -pdf -interaction=nonstopmode -file-line-error
      
      - name: Rename PDF with version
        run: |
          mv main.pdf "main-CL${{ env.COMMIT_COUNT }}-${{ env.COMMIT_HASH }}.pdf"
          echo "Created: main-CL${{ env.COMMIT_COUNT }}-${{ env.COMMIT_HASH }}.pdf"
      
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-pdf-CL${{ env.COMMIT_COUNT }}
          path: "*.pdf"
          retention-days: 90
      
      - name: Create Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.COMMIT_COUNT }}
          name: Release CL${{ env.COMMIT_COUNT }}
          files: "*.pdf"
          body: |
            ðŸ“„ Automated PDF Compilation
            
            **Version:** CL${{ env.COMMIT_COUNT }}-${{ env.COMMIT_HASH }}
            **Date:** ${{ github.event.head_commit.timestamp }}
            **Commit:** ${{ github.sha }}
            **Message:** ${{ github.event.head_commit.message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}